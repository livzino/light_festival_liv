---
const data = await fetch(
  "https://sxdcfbtekrznubmimpmp.supabase.co/rest/v1/cphlf2",

  {
    method: "GET",
    headers: {
      apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN4ZGNmYnRla3J6bnVibWltcG1wIiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTU3MjM3OTgsImV4cCI6MjAxMTI5OTc5OH0.SWGKNpOWij6-SQRCZs_H00PzCW70M2cG6_IYIIAjI1k",
    },
  }
).then((res) => res.json());
---

<video src="https://player.vimeo.com/video/802387040?background=1&amp;wmode=opaque"></video>
<section class="timeline">
  <ul>
    <li>
      <h3>VÆRKER</h3>
    </li>
    {
      data
        .filter((myData) => myData.event === "Værker")
        .map((myData) => (
          <li>
           <a href={"/artworks/" + myData.slug}>
           <div class="container">
           <img src={myData.img} alt="" class="image" />
           <p class="text">{myData.titel}</p>
           </div>
           </a>
          </li>
        ))
    }
    <li>
      <h3>POP-UP EVENTS</h3>
    </li>
    {
      data
        .filter((myData) => myData.event === "Popup")
        .map((myData) => (
          <li>
            <a href={"/artworks/" + myData.slug}>
           <div class="container">
           <img src={myData.img} alt="" class="image" />
           <p class="text">{myData.titel}</p>
           </div>
           </a>
          </li>
        ))
    }
    <li>
      <h3>EXTRA LIGHT EXPERIENCES</h3>
    </li>
    {
      data
        .filter((myData) => myData.event === "Extralight")
        .map((myData) => (
          <li>
  <a href={"/artworks/" + myData.slug}>
           <div class="container">
           <img src={myData.img} alt="" class="image" />
           <p class="text">{myData.titel}</p>
           </div>
           </a>
          </li>
        ))
    }
  </ul>
</section>

<style>
  h3 {
    white-space: nowrap;
    margin-left: 32px;
  }

.container {
  position: relative;
  width: 100%;
  display: inline-block;
}

.image {
width: 400px;
height: 300px;
display: block;
}

.text {
  position: absolute;
  top: 50%;
  left: 54%;
  transform: translate(-50%, -50%);
  background-color: var(--button);
  color: var(--text-beige);
  font-family: var(--font-chicle);
  font-size: var(--font-size-button);
  text-decoration: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  text-align: center;
  padding: var(--padding-button);
  border-radius: var(--border-radius-round);
  box-shadow: var(--shadow-default);
  display: none;
  transition: opacity 0.3s ease-in-out;
  width: 70%;
}


.container:hover .image {
  filter: brightness(30%);
}

.container:hover .text {
  display: inline-block;
  opacity: 1;
  box-shadow: var(--shadow-hover);
}

  /* TIMELINE
–––––––––––––––––––––––––––––––––––––––––––––––––– */
  *,
  *::before,
  *::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    overflow-x: hidden;
    padding-bottom: 50px;
  }

  .timeline {
  margin-bottom: 80px;}

  .timeline ul {
    padding: 50px 0;
  }

  .timeline ul li {
    list-style-type: none;
    position: relative;
    width: 6px;
    margin: 0 auto;
    padding-top: 50px;
    background: var(--text-beige);
  }

  .timeline ul li::after {
    content: "";
    position: absolute;
    left: 50%;
    bottom: 0;
    transform: translateX(-50%);
    width: 30px;
    height: 30px;
    border-radius: 50%;
    background: inherit;
    z-index: 1;
  }

  .timeline ul li div {
    position: relative;
    bottom: 0;
    width: 400px;
    padding: 15px;
  }

  .timeline ul li div::before {
    content: "";
    position: absolute;
    bottom: 7px;
    width: 0;
    height: 0;
    border-style: solid;
  }

  .timeline ul li:nth-child(odd) div {
    left: 45px;
  }

  .timeline ul li:nth-child(odd) div::before {
    left: -15px;
    border-width: 0;
    border-color: transparent var(--button) transparent transparent;
  }

  .timeline ul li:nth-child(even) div {
    left: -439px;
  }

  .timeline ul li:nth-child(even) div::before {
    right: -15px;
    border-width: 0;
    border-color: transparent transparent transparent var(--button);
  }

  time {
    display: block;
    font-size: 1.2rem;
    font-weight: bold;
    margin-bottom: 8px;
  }

  /* EFFECTS
–––––––––––––––––––––––––––––––––––––––––––––––––– */

  .timeline ul li::after {
    transition: background 0.5s ease-in-out;
  }

  .timeline ul li.in-view::after {
    background: var(--button);
  }

  .timeline ul li div {
    visibility: hidden;
    opacity: 0;
    transition: all 0.5s ease-in-out;
  }

  .timeline ul li:nth-child(odd) div {
    transform: translate3d(200px, 0, 0);
  }

  .timeline ul li:nth-child(even) div {
    transform: translate3d(-200px, 0, 0);
  }

  .timeline ul li.in-view div {
    transform: none;
    visibility: visible;
    opacity: 1;
  }

  /* GENERAL MEDIA QUERIES
–––––––––––––––––––––––––––––––––––––––––––––––––– */

  @media screen and (max-width: 900px) {
    .timeline ul li div {
      width: 250px;
    }
    .timeline ul li:nth-child(even) div {
      left: -289px;
´    }
  }

  @media screen and (max-width: 600px) {
    .timeline ul li {
      margin-left: 20px;
    }
    .timeline ul li div {
      width: calc(100vw - 91px);
    }
    .timeline ul li:nth-child(even) div {
      left: 45px;
    }
   .timeline ul li div::before {
    display: none;
  }

      .image {
    width: 300px;
    height: 200px;
  }

  .text {
    display: block;
     top: 50%;
  left: 46%;
  transform: translate(-50%, -50%);
  }

  .container:hover .image {
    filter: none;
  }

  .container:hover .text {
  display: block;
  box-shadow: var(--shadow-default);
  }

  }

  /* EXTRA/CLIP PATH STYLES
–––––––––––––––––––––––––––––––––––––––––––––––––– */
  .timeline-clippy ul li::after {
    width: 40px;
    height: 40px;
    border-radius: 0;
  }

  .timeline-rhombus ul li::after {
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  }

  .timeline-rhombus ul li div::before {
    bottom: 12px;
  }

  .timeline-star ul li::after {
    clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
  }

  .timeline-heptagon ul li::after {
    clip-path: polygon(50% 0%, 90% 20%, 100% 60%, 75% 100%, 25% 100%, 0% 60%, 10% 20%);
  }

  .timeline-infinite ul li::after {
    animation: scaleAnimation 2s infinite;
  }

  @keyframes scaleAnimation {
    0% {
      transform: translateX(-50%) scale(1);
    }
    50% {
      transform: translateX(-50%) scale(1.25);
    }
    100% {
      transform: translateX(-50%) scale(1);
    }
  }
</style>

<script>
  (function () {
    "use strict";

    // define variables
    var items = document.querySelectorAll(".timeline li");

    // check if an element is in viewport
    // http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport
    function isElementInViewport(el) {
      var rect = el.getBoundingClientRect();
      return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);
    }

    function callbackFunc() {
      for (var i = 0; i < items.length; i++) {
        if (isElementInViewport(items[i])) {
          items[i].classList.add("in-view");
        }
      }
    }

    // listen for events
    window.addEventListener("load", callbackFunc);
    window.addEventListener("resize", callbackFunc);
    window.addEventListener("scroll", callbackFunc);
  })();
</script>
